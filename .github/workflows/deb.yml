name: Build debian packages

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build. Leave it empty to use the latest one."
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/deb.yml"
      - "release/debian/*"

jobs:
  package:
    if: github.repository == 'v2fly/v2ray-core'
    runs-on: ubuntu-latest
    container: golang:1.17-bullseye

    steps:
      - name: Update & install dependencies
        run: |
          apt-get update
          apt-get install -y git wget

      - name: Get tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: tag
        run: |
          latest_tag=$(curl -sSL --retry 5 "https://api.github.com/repos/v2fly/v2ray-core/releases/latest" | jq .tag_name | awk -F '"' '{print $2}')
          if [[ -z "${{ github.event.inputs.tag }}" ]]; then
            echo "Use the latest release tag of v2ray-core: ${latest_tag}"
            echo ::set-output name=tag::${latest_tag}
          else
            echo "Use tag: ${{ github.event.inputs.tag }}"
            echo ::set-output name=tag::${{ github.event.inputs.tag }}
          fi

      - name: Checkout codebase on a specific tag for `workflow_dispatch` event
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.tag.outputs.tag }}
          fetch-depth: 0

      - name: Checkout codebase on the triggered commit for other events
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/checkout@v2

      - name: Override file `release/debian/changelog` to get the latest CHANGELOG
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          curl --fail "https://raw.githubusercontent.com/v2fly/v2ray-core/${github.ref_name}/release/debian/changelog" > release/debian/changelog

      - name: Download geo files
        run: |
          wget -O release/config/geoip.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip.dat"
          wget -O release/config/geoip-only-cn-private.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip-only-cn-private.dat"
          wget -O release/config/geosite.dat "https://raw.githubusercontent.com/v2fly/domain-list-community/release/dlc.dat"

      - name: Install build dependencies
        run: |
          apt-get install -y build-essential dh-golang reprepro

      - name: Build
        run: |
          echo "PATH=${PATH}"
          cp -r release/debian .
          dpkg-buildpackage -us -uc -i -b -d

      - name: Copy binary
        run: |
          cp ../*.deb ./

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: v2ray-debian-packages
          path: ./*.deb

      - name: Setup Repository
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          git clone https://github.com/v2fly/debian.git archive
          echo ${{ secrets.DEBIAN_GPG_PRIVATE }} | base64 -d > private.key
          gpg --import --batch private.key
          gpg -K
          cd archive
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.DEBIAN_REPO_TOKEN }}@github.com/v2fly/debian.git
          reprepro includedeb stable ../*.deb
          git add -A
          git commit -am 'update'
          git push origin main
